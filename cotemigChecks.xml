<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Check Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
  <!-- Severidade default -->
  <property name="severity" value="error" />

  <!-- Convenções gerais -->
  <module name="TreeWalker">

     <!-- Nomes -->
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
    </module>
    <module name="ConstantName" />
    <module name="LocalFinalVariableName">
      <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$" />
    </module>
    <module name="MemberName" />
    <module name="LocalVariableName" />
    <module name="MemberName" />
    <module name="ParameterName" />
    <module name="StaticVariableName" />
    <module name="TypeName" />
    <module name="MethodName" />

    <!-- Comentários -->
    <!-- convencoes para o cabeçalho de classes -->
    <!-- convencoes para o JavaDoc -->
    <module name="JavadocMethod">
      <property name="scope" value="public" />
    </module>
    <module name="JavadocType">
      <property name="scope" value="public" />
    </module>
    <module name="JavadocVariable">
      <property name="scope" value="public" />
    </module>
    <module name="JavadocStyle">
      <property name="scope" value="public" />
    </module>

    <!-- Indentação -->
    <!-- As chaves que delimitam um bloco devem ser colocadas na mesma coluna inicial do "proprietário" do bloco. -->
    <module name="LeftCurly">
      <property name="option" value="nl" />
      <property name="tokens"  value="CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF" />
    </module>
     <module name="RightCurly">
      <property name="option" value="same" />
      <property name="tokens" value="LITERAL_CATCH, LITERAL_ELSE" />
    </module>
    <!-- As chaves que delimitam um bloco devem ser colocadas na mesma linha do "proprietário" do bloco. -->
    <module name="LeftCurly">
      <property name="tokens" value="LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE"/>
    </module>

    <!-- O código interior a um bloco deve ser identado uma unidade de tabulação à direita das chaves. -->
    <module name="Indentation">
      <property name="basicOffset" value="2" />
      <property name="caseIndent" value="2" />
      <property name="throwsIndent" value="2" />
    </module>

    <!-- boas práticas -->

    <!-- evitar múltiplas atribuições na mesma linha. -->
    <module name="InnerAssignment" />

    <!-- evitar múltiplas declarações na mesma linha. -->
    <module name="MultipleVariableDeclarations" />

    <!-- evitar variáveis locais esconderem variáveis globais. -->
    <module name="HiddenField">
      <property name="ignoreSetter" value="true" />
      <property name="ignoreConstructorParameter" value="true" />
    </module>

    <!-- evitar membros de classes públicos. -->
    <module name="VisibilityModifier" />

    <!-- ordenação das declarações na classe. -->
    <module name="DeclarationOrder" />
    <module name="ModifierOrder" />

    <!--Import não utilizado -->
    <module name="UnusedImports">
      <property name="severity" value="error"/>
    </module>

    <!--Método sobreescrito sem anotação override -->
    <module name="MissingOverride">
      <property name="severity" value="error"/>
    </module>


    <!-- Tamanho máximo de linhas de um método -->
    <module name="MethodLength">
      <property name="severity" value="error" />
      <property name="max" value="30" />
    </module>

    <!-- Número máximo de parâmetros em um método. -->
    <module name="ParameterNumber">
      <property name="max" value="5" />
      <property name="severity" value="error" />
    </module>

    <!-- evitar blocos vazio. -->
    <module name="EmptyBlock" />
    <module name="EmptyStatement" />

    <!-- simplificar expressão lógica. -->
    <module name="SimplifyBooleanExpression" />
    <module name="SimplifyBooleanReturn" />
    <module name="BooleanExpressionComplexity" />

    <!-- evitar uso incorreto do operador '==' para comparação de strings. -->
    <module name="StringLiteralEquality" />

    <!-- evitar uso de literais no meio do código. -->
    <module name="MagicNumber" />

    <!-- Evita a repetição do mesmo String sem declarar constantes. -->
    <module name="MultipleStringLiterals">
      <property name="severity" value="error" />
    </module>

    <!-- definir limites no comprimento das linhas e numero de linhas do arquivo -->
    <!-- Ignora tamanho da linha em definições hibernate.  -->
    <module name="LineLength">
      <property name="ignorePattern"
                value="(^.*(class|query).*=.*$)|(^import)|(^package)" />
      <property name="max" value="120" />
    </module>

    <!-- Máximo 3 if aninhados -->
    <module name="NestedIfDepth">
      <property name="max" value="3" />
    </module>

    <!-- Força uso de {} -->
    <module name="NeedBraces">
      <property name="severity" value="error" />
    </module>

  </module>

  <module name="FileLength">
    <property name="severity" value="error"/>
    <property name="max" value="1000"/>
  </module>

</module>